{
    "version": "https://jsonfeed.org/version/1",
    "title": "墨眉的小站",
    "home_page_url": "https://valaxy.site/",
    "feed_url": "https://valaxy.site/feed.json",
    "description": "偶尔的学习记录~ ",
    "icon": "https://valaxy.site/avatar.jpg",
    "author": {
        "name": "墨眉",
        "url": "https://valaxy.site"
    },
    "items": [
        {
            "id": "",
            "content_html": "<h3>hash模式</h3>\n<p><a href=\"'https://developer.mozilla.org/zh-CN/docs/Web/API/Location/hash'\">hash</a>模式是在域名和 path 之间使用<code>#</code>进行分隔，<code>#</code>及其后面的 url 片段标识符就是 hash 字符串。</p>\n<blockquote>\n<p>例如： 127.0.0.1/#/login  , hash  就是  #/login</p>\n</blockquote>\n<p>hash 的特点是页面刷新和改变 hash ，hash 不会被带入网络请求。</p>\n<blockquote>\n<p>例如：当我们分别请求  <a href=\"https://juejin.cn/\">https://juejin.cn/</a> 和 <a href=\"https://juejin.cn/#aaa\">https://juejin.cn/#aaa</a> ,会发现 network 中始终只有  <a href=\"https://juejin.cn/\">https://juejin.cn/</a> 的 网络请求。再次说明了 hash 不会影响网络请求结果。</p>\n</blockquote>\n<a-box>\n<img src=\"https://valaxy.site/contents/postAssets/rt.png\" />\n</a-box>\n<p>所以，实际上我们的路由每次刷新都是请求的相同的 url ，返回的始终是一个页面，由于是 SPA 的特性，实际上已经加载完所有需要的页面资源了，页面的切换不过是通过监听 hash 的改变，执行 js 脚本来更换视图模块。</p>\n",
            "url": "https://valaxy.site/posts/路由history部署后刷新404",
            "title": "vue-router history部署后刷新404",
            "date_modified": "2023-06-09T00:00:00.000Z",
            "date_published": "2023-06-09T00:00:00.000Z",
            "author": {
                "name": "墨眉",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h3>环境搭建</h3>\n<ol>\n<li>安装 pnpm  ，使用 pnpm 包管理器管理项目</li>\n<li>使用 vite 作为开发服务器和打包工具</li>\n<li>安装 sass 预处理器，安装 vue</li>\n</ol>\n<h3>monorepor</h3>\n<ol>\n<li>\n<p>新建一个 pacakages 文件夹，里面存放多个项目仓库</p>\n</li>\n<li>\n<p>新建一个 pnpm-work-space.yaml 文件,指定 <a href=\"https://pnpm.io/zh/workspaces\">workspace</a>, pnpm 如果安装本地包在工作空间中存在，那么会直接链接包。不存在声明范围内的包， pnpm 会拒绝解析安装。</p>\n<p>packages下面的在 package.json 中指定 name 包名，通过 -w 安装，例如： pnpm i @momei-ui/components -w</p>\n<pre><code class=\"language-yaml\">packages:\n  - packages/*\n  - play\n</code></pre>\n</li>\n</ol>\n",
            "url": "https://valaxy.site/posts/vue组件库环境搭建",
            "title": "vue组件库搭建",
            "date_modified": "2023-05-21T00:00:00.000Z",
            "date_published": "2023-05-21T00:00:00.000Z",
            "author": {
                "name": "墨眉",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h3>概述</h3>\n<blockquote>\n<p>渡一短视频--钉钉官网动效demo</p>\n</blockquote>\n<ol>\n<li>动画状态函数</li>\n<li>sticky布局</li>\n</ol>\n",
            "url": "https://valaxy.site/posts/钉钉官网动效简易实现",
            "title": "钉钉官网动效简易实现",
            "date_modified": "2023-05-14T00:00:00.000Z",
            "date_published": "2023-05-14T00:00:00.000Z",
            "author": {
                "name": "墨眉",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h3>概述</h3>\n<p>阅读element notify组件（<s>摸鱼真爽</s>）。</p>\n<blockquote>\n<p>createVNode/render 相比于模板语法有更高的自由度，在需要js的完全编程能力时非常有用。</p>\n</blockquote>\n<h3>编程式触发创建</h3>\n<ol>\n<li>定义组件模板（component）</li>\n<li>定义props参数和触发事件</li>\n<li>缓存vnode，后续通过vnode缓存计算定位高度</li>\n</ol>\n",
            "url": "https://valaxy.site/posts/createVNode_render创建notify组件",
            "title": "createVNode/render创建notify组件",
            "date_modified": "2023-03-21T00:00:00.000Z",
            "date_published": "2023-03-21T00:00:00.000Z",
            "author": {
                "name": "墨眉",
                "url": "https://valaxy.site"
            }
        }
    ]
}